<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>netcoreapp3.1</TargetFramework>
	<AspNetCoreHostingModel>InProcess</AspNetCoreHostingModel>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
    <IsPackable>false</IsPackable>
    <SpaRoot>ClientApp\</SpaRoot>
    <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>

    <!-- Set this to true if you enable server-side prerendering -->
    <BuildServerSideRenderer>false</BuildServerSideRenderer>
    <ApplicationInsightsResourceId>/subscriptions/f915c1ba-9db1-41dc-b374-24e4faed556a/resourcegroups/Default-ApplicationInsights-EastUS/providers/microsoft.insights/components/JMovies</ApplicationInsightsResourceId>
    <ApplicationInsightsAnnotationResourceId>/subscriptions/f915c1ba-9db1-41dc-b374-24e4faed556a/resourceGroups/JMovies/providers/microsoft.insights/components/JMovies</ApplicationInsightsAnnotationResourceId>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="JM.Framework" Version="1.0.5" />
    <PackageReference Include="JMovies.IMDb" Version="1.5.5" />
    <PackageReference Include="log4net" Version="2.0.12" />
    <PackageReference Include="Microsoft.ApplicationInsights.AspNetCore" Version="2.16.0" />
    <PackageReference Include="Microsoft.ApplicationInsights.Log4NetAppender" Version="2.16.0" />
    <PackageReference Include="Microsoft.AspNetCore.Authentication.Core" Version="2.2.0" />
    <PackageReference Include="Microsoft.AspNetCore.Authentication.JwtBearer" Version="3.1.11" />
    <PackageReference Include="Microsoft.AspNetCore.Cryptography.Internal" Version="3.1.11" />
    <PackageReference Include="Microsoft.AspNetCore.Http.Features" Version="3.1.2" />
    <PackageReference Include="Microsoft.AspNetCore.Mvc.NewtonsoftJson" Version="3.1.11" />
    <PackageReference Include="Microsoft.AspNetCore.ResponseCompression" Version="2.2.0" />
    <PackageReference Include="Microsoft.AspNetCore.SpaServices" Version="3.1.11" />
    <PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="3.1.2" />
    <PackageReference Include="NEST" Version="7.10.1" />
    <PackageReference Include="SixLabors.ImageSharp" Version="1.0.2" />
    <PackageReference Include="SixLabors.ImageSharp.Drawing" Version="1.0.0-beta0007" />
  </ItemGroup>

  <ItemGroup>
    <!-- Don't publish the SPA source files, but do show them in the project files list -->
    <Content Remove="$(SpaRoot)**" />
    <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
  </ItemGroup>

  <ItemGroup>
    <None Remove="ClientApp\src\app\models\general-models\application-context.ts" />
    <None Remove="ClientApp\src\app\models\general-models\authentication-info.ts" />
    <None Remove="ClientApp\src\app\models\general-models\result-handling\jm-result-item.ts" />
    <None Remove="ClientApp\src\app\models\general-models\result-handling\jm-result.ts" />
    <None Remove="ClientApp\src\app\models\general-models\result-handling\redirection-info.ts" />
    <None Remove="ClientApp\src\app\models\general-models\result-handling\redirection-type-enum.ts" />
    <None Remove="ClientApp\src\app\models\general-models\searchResult.ts" />
    <None Remove="ClientApp\src\app\models\request-models\getProductionCastRequest.ts" />
    <None Remove="ClientApp\src\app\models\request-models\loginRequest.ts" />
    <None Remove="ClientApp\src\app\models\request-models\registerRequest.ts" />
    <None Remove="ClientApp\src\app\models\request-models\searchRequest.ts" />
    <None Remove="ClientApp\src\app\models\response-models\getLastAddedProductionsResponse.ts" />
    <None Remove="ClientApp\src\app\models\response-models\getProductionCastResponse.ts" />
    <None Remove="ClientApp\src\app\models\response-models\loginResponse.ts" />
    <None Remove="ClientApp\src\app\models\response-models\registerResponse.ts" />
    <None Remove="ClientApp\src\app\models\response-models\searchResponse.ts" />
    <None Remove="Gulpfile.ts" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\JMovies.Common\JMovies.Common.csproj" />
    <ProjectReference Include="..\JMovies.Entities\JMovies.Entities.csproj" />
    <ProjectReference Include="..\JMovies.Web\JMovies.Web.csproj" />
  </ItemGroup>

  <ItemGroup>
    <TypeScriptCompile Include="ClientApp\src\app\models\general-models\application-context.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\models\general-models\authentication-info.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\models\general-models\result-handling\jm-result-item.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\models\general-models\result-handling\jm-result.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\models\general-models\result-handling\redirection-info.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\models\general-models\result-handling\redirection-type-enum.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\models\general-models\searchResult.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\models\request-models\getProductionCastRequest.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\models\request-models\loginRequest.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\models\request-models\registerRequest.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\models\request-models\searchRequest.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\models\response-models\getLastAddedProductionsResponse.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\models\response-models\getProductionCastResponse.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\models\response-models\loginResponse.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\models\response-models\registerResponse.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\models\response-models\searchResponse.ts" />
    <TypeScriptCompile Include="Gulpfile.ts">
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
    </TypeScriptCompile>
  </ItemGroup>

  <ItemGroup>
    <WCFMetadata Include="Connected Services" />
  </ItemGroup>

  <ItemGroup>
    <Content Update="ConfigurationFiles\FlowExecutionConfiguration.json">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
    <Content Update="ConfigurationFiles\Flows\BasicResolutionTest.json">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
    <Content Update="ConfigurationFiles\Flows\GetPersonDetails.json">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
    <Content Update="ConfigurationFiles\Flows\GetImageContents.json">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
    <Content Update="ConfigurationFiles\Flows\GetProductionDetails.json">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
    <Content Update="ConfigurationFiles\Flows\Register.json">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
      <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
    </Content>
    <Content Update="ConfigurationFiles\Flows\StaticDataManagement.json">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
    <Content Update="log4net.config">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
  </ItemGroup>

  <ItemGroup>
    <Folder Include="Validations\" />
  </ItemGroup>

  <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
    <!-- Ensure Node.js is installed -->
    <Exec Command="node --version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
    <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
  </Target>

  <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
    <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build -- --prod" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build:ssr -- --prod" Condition=" '$(BuildServerSideRenderer)' == 'true' " />

    <!-- Include the newly-built files in the publish output -->
    <ItemGroup>
      <DistFiles Include="$(SpaRoot)dist\**; $(SpaRoot)dist-server\**" />
      <DistFiles Include="$(SpaRoot)node_modules\**" Condition="'$(BuildServerSideRenderer)' == 'true'" />
      <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>%(DistFiles.Identity)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>

</Project>
